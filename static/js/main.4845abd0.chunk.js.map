{"version":3,"sources":["student/studentSlice.js","student/Student.js","Shell/validator.js","Shell/index.js","student/detail/table.js","student/detail/index.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["slice","createSlice","name","initialState","studentList","roll","description","selectedStudent","reducers","addStudent","state","action","push","payload","setSelectedStudent","actions","Student","dispatch","useDispatch","ListItem","alignItems","onClick","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","Typography","sx","display","component","variant","color","length","Divider","Date","setDate","getDate","RegExp","style","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","text","position","top","left","transform","width","bgcolor","border","boxShadow","p","AlignItemsList","React","useState","open","setOpen","setName","setDescription","setRollNo","handleClose","useSelector","student","Container","List","maxWidth","map","value","Button","Modal","onClose","Box","initialValues","Name","RollNo","Description","validationSchema","console","log","object","shape","string","min","required","matches","onSubmit","values","setSubmitting","resetForm","setTimeout","submitForm","isSubmitting","LocalizationProvider","dateAdapter","AdapterDateFns","margin","TextField","type","label","helperText","multiline","rows","disabled","StyledTableCell","TableCell","tableCellClasses","head","backgroundColor","common","black","white","body","fontSize","StyledTableRow","TableRow","hover","CustomizedTables","rollNo","TableContainer","Table","minWidth","marginTop","TableHead","align","TableBody","scope","StudentDetail","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","studentReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4845abd0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nexport const slice = createSlice({\nname:\"student\",\n  initialState: {\n      studentList:[\n          {\n        name: \"Abdul Rafay\",\n        roll:\"2019-SE-073\",\n        description:\"Student\" },],\n    selectedStudent:{}},\n  reducers: {\n    addStudent: (state, action) => {\n            state.studentList.push(action.payload) },\n    setSelectedStudent: (state, action) => {\n        state.selectedStudent=action.payload},},});\nexport const {  addStudent,setSelectedStudent } = slice.actions;\nexport const getStudent = state => state.student.studentList;\nexport default slice.reducer;","import React from 'react'\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport {\n    setSelectedStudent\n  } from \"../student/studentSlice\";\nimport {  useDispatch } from 'react-redux';\nimport Typography from '@mui/material/Typography';\nconst Student=({name, roll, description})=>{\n    const dispatch = useDispatch();\n    const setSelectedStudentFun=()=>{\n  dispatch(setSelectedStudent({name:name, roll: roll, description, description}))}\n    return(<>\n        <ListItem alignItems=\"flex-start\" onClick={setSelectedStudentFun}>\n            <ListItemAvatar>\n            <Avatar alt={`${name}`} src=\"/static/images/avatar/1.jpg\" />\n            </ListItemAvatar>\n            <ListItemText\n            primary={`${name} (${roll})`}\n            secondary={\n                <React.Fragment>\n                <Typography\n                    sx={{ display: 'inline' }}\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"text.primary\">\n                    {description.length>15 ? `${description.slice(0,15)}...`:description}\n                </Typography>\n                </React.Fragment>} />\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" /></> )}\n   export default Student","import {object, string, date, array} from 'yup';\n\nconst tomorrowDate = new Date(new Date().setDate(new Date().getDate() + 1));\nconst regex = new RegExp(/^a...s$/)\nexport const validationSchema = () =>{\n  console.log(\"chalrha \")\n  return object().shape({\n    Name: string().min(2, 'Atleast 2 character required').required(\"Please Enter your Name\"),\n    RollNo: string().matches(\n        /^\\d{4}-[a-zA-Z]{2}-\\d{3}$/,\n        \"Roll No must be in a given format (i.e 2019-SE-073)\"\n      ).required(\"Please Enter your Roll No\"),\n    Description: string().min(30, 'Atleast 30 character required').required(\"Please Enter Description\"),\n  });\n}\n  \n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport List from \"@mui/material/List\";\nimport Button from \"@mui/material/Button\";\nimport Student from \"../student/Student\";\nimport { LocalizationProvider } from \"@mui/lab\";\nimport Container from \"@mui/material/Container\";\nimport { validationSchema } from \"./validator\";\nimport Box from \"@mui/material/Box\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { TextField } from \"formik-mui\";\nimport { styled } from \"@mui/material/styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport { addStudent } from \"../student/studentSlice\";\nimport \"./index.css\";\nimport { IconButton } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\nexport default function AlignItemsList() {\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [rollNo, setRollNo] = useState(\"\");\n  const emptyField = () => {\n    setName(\"\");\n    setRollNo(\"\");\n    setDescription(\"\");\n  };\n  const handleOpen = () => {\n    setOpen(true);\n    emptyField();\n  };\n  const handleClose = () => setOpen(false);\n\n  const studentList = useSelector((state) => state.student.studentList);\n\n  return (\n    <Container>\n      <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\n        {studentList.map((value) => {\n          return (\n            <>\n              <Student\n                name={value.name}\n                roll={value.roll}\n                description={value.description}\n              />\n            </>\n          );\n        })}\n      </List>\n      <Button variant=\"contained\" onClick={handleOpen}>\n        Add <AddIcon />\n      </Button>\n\n      <div>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <>\n            <Box sx={style}>\n              <Formik\n                initialValues={{\n                  Name: \"\",\n                  RollNo: \"\",\n                  Description: \"\",\n                }}\n                validationSchema={() => {\n                  return validationSchema();\n                }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                    let { Name, RollNo, Description } = values;\n                    setSubmitting(false);\n                    dispatch(\n                      addStudent({\n                        name: Name,\n                        roll: RollNo,\n                        description: Description,\n                      })\n                    );\n                    resetForm();\n                    handleClose()\n                  }, 500);\n                }}\n              >\n                {({ values, submitForm, isSubmitting }) => (\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <Form>\n                      <Box margin={1}>\n                        <Field\n                          component={TextField}\n                          name=\"Name\"\n                          sx={\n                            {\n                              width:'100%'\n                            }\n                          }\n                          type=\"text\"\n                          label=\"Name\"\n                          helperText=\"Please Enter Name\"\n                        />\n                      </Box>\n                      <Box margin={1}>\n                        <Field\n                        sx={\n                          {\n                            width:'100%'\n                          }\n                        }\n                          component={TextField}\n                          name=\"RollNo\"\n                          type=\"text\"\n                          label=\"RollNo\"\n                          helperText=\"Please Enter Roll No\"\n                        />\n                      </Box>\n                      <Box margin={1}>\n                        <Field\n                          component={TextField}\n                          name=\"Description\"\n                          type=\"text\"\n                          label=\"Description\"\n                          sx={\n                            {\n                              width:'100%'\n                            }\n                          }\n                          multiline\n                          rows={4}\n                          helperText=\"Please Enter Description\"\n                        />\n                      </Box>\n                      <Box margin={1}>\n                        <Button\n                          sx={{ margin: 1 }}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          onClick={submitForm}\n                        >\n                          Submit\n                        </Button>\n                      </Box>\n                      {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n                    </Form>\n                  </LocalizationProvider>\n                )}\n              </Formik>\n            </Box>\n          </>\n        </Modal>\n      </div>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\n\nexport default function CustomizedTables({name=\"Abdul Rafay\", rollNo=\"2019-SE-073\", description=\" i am a Student\"}) {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 700, marginTop:8 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"left\">Roll No</StyledTableCell>\n            <StyledTableCell align=\"left\">Description</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n\n            <StyledTableRow key={name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {name}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">{rollNo}</StyledTableCell>\n              <StyledTableCell align=\"left\">{description}</StyledTableCell>\n\n            </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport {  useSelector } from 'react-redux';\nimport CustomizedTables from './table'\nconst StudentDetail=()=>{\n    const {name, roll, description}=useSelector(state=>state.student.selectedStudent)\n    return(\n        <CustomizedTables name={name} rollNo={roll} description={description}/>\n               \n    )\n}\n   export default StudentDetail","import React from 'react'\nimport Shell from './Shell/index'\nimport StudentDetail from './student/detail/index';\nimport { useSelector, useDispatch } from 'react-redux';\nconst App=()=> {\nconst selectedStudent=useSelector(state=>state.student.selectedStudent)\n    return(\n      <div className=\"countContainer\">\n        <Shell/>\n        <StudentDetail/>\n      </div>\n    )}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\nexport default reportWebVitals;","import { configureStore } from '@reduxjs/toolkit';\nimport studentReducer from './student/studentSlice';\n\nexport default configureStore({\n  reducer: {\n    student: studentReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}